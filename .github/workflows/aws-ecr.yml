# In order to utilize this workflow, you must have OpenID Connect already set up in AWS.
# See https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
# The following GitHub repository secrets must be present:
#     - GHA_ECR_ROLE_ASSUMPTION
#     - ECR_REPOSITORY

name: Automate Docker Build Push to AWS ECR

on:
  workflow_call:
    inputs:
      aws-region:
        type: string
        required: false
        description: "The region where the ECR repo is located."
        default: "us-west-2"
    secrets:
      GHA_ECR_ROLE_ASSUMPTION:
        required: true
      ECR_REPOSITORY:
        required: true
permissions:
  id-token: write
  actions: read
  contents: read

jobs:
  build-and-push-dev-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ secrets.GHA_ECR_ROLE_ASSUMPTION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Construct image URI
        id: construct-image-uri
        env:
          GIT_BRANCH: ${{ github.ref_name }}
          GIT_COMMIT: ${{ github.sha }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
        shell: bash
        run: |
          BRANCH_PREFIX="$GIT_BRANCH"
          # use a generic prefix for all non-main branches
          if [[ "$BRANCH_PREFIX" != "main" ]]; then
            BRANCH_PREFIX="branch"
          fi
          BUILD_TIME=$(date '+%Y%m%d%H%M%S')
          IMAGE_TAG="${BRANCH_PREFIX}-${GIT_COMMIT}-${BUILD_TIME}"
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}"
          echo "image-uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
        id: buildx
        with:
          install: true

      - name: Build and push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6
        with:
          context: .
          push: true
          tags: ${{ steps.construct-image-uri.outputs.image-uri }}
          build-args: |
            BUILD=${{ github.sha }}
          provenance: false
